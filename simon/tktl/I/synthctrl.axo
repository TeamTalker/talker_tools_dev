<objdefs appVersion="1.0.12">
   <obj.normal id="synthctrl" uuid="93d23867-43ab-447b-a595-8c5b29ace0ba">
      <sDescription>Synth Controller indices version, connect before Tables Module. Chainable, the morp dial will always morph between the parameters on the module and the preceeding object. Part of the Talker Tools</sDescription>
      <author>Team Talker</author>
      <license>GPL</license>
      <inlets>
         <frac32buffer.positive name="tALKER"/>
         <bool32.risingfalling name="gate"/>
      </inlets>
      <outlets>
         <frac32buffer.positive name="tALKER"/>
      </outlets>
      <displays/>
      <params>
         <frac32.u.map name="morph"/>
         <bool32.tgl name="gate"/>
         <frac32.u.map name="ENERGYi"/>
         <frac32.u.map name="PITCHi"/>
         <frac32.u.map name="K1i"/>
         <frac32.u.map name="K2i"/>
         <frac32.u.map name="K3i"/>
         <frac32.u.map name="K4i"/>
         <frac32.u.map name="K5i"/>
         <frac32.u.map name="K6i"/>
         <frac32.u.map name="K7i"/>
         <frac32.u.map name="K8i"/>
         <frac32.u.map name="K9i"/>
         <frac32.u.map name="K10i"/>
      </params>
      <attribs/>
      <code.declaration><![CDATA[int32_t ccompl = 0;
int32_t morph = 0;
bool gate = 0;]]></code.declaration>
      <code.krate><![CDATA[if (!param_morph) {
	ccompl = 1<<9;
	morph = 0;
} else if (param_morph == 0x7ffffff) {
	ccompl = 0;
	morph = 1<<9;
} else {
ccompl = ((1<<9)-(param_morph>>18));
morph = param_morph>>18;
}
int32_t a = ((param_ENERGYi) >> 23) * ccompl + inlet_tALKER[0] * morph;
outlet_tALKER[0] = a>>9;

a = (param_PITCHi >> 21) * ccompl + inlet_tALKER[1] * morph;
outlet_tALKER[1] = a>>9;


a = (param_K1i >> 22) * ccompl + inlet_tALKER[2] * morph;
outlet_tALKER[2] = a>>9;

a = (param_K2i >> 22) * ccompl + inlet_tALKER[3] * morph;
outlet_tALKER[3] = a>>9;

a = (param_K3i >> 23) * ccompl + inlet_tALKER[4] * morph;
outlet_tALKER[4] = a>>9;

a = (param_K4i >> 23) * ccompl + inlet_tALKER[5] * morph;
outlet_tALKER[5] = a>>9;

a = (param_K5i >> 23) * ccompl + inlet_tALKER[6] * morph;
outlet_tALKER[6] = a>>9;

a = (param_K6i >> 23) * ccompl + inlet_tALKER[7] * morph;
outlet_tALKER[7] = a>>9;

a = (param_K7i >> 23) * ccompl + inlet_tALKER[8] * morph;
outlet_tALKER[8] = a>>9;

a = (param_K8i >> 24) * ccompl + inlet_tALKER[9] * morph;
outlet_tALKER[9] = a>>9;

a = (param_K9i >> 24) * ccompl + inlet_tALKER[10] * morph;
outlet_tALKER[10] = a>>9;

a = (param_K10i >> 24) * ccompl + inlet_tALKER[11] * morph;
outlet_tALKER[11] = a>>9;

outlet_tALKER[12] = 0;
if (inlet_gate | param_gate | inlet_tALKER[13]) gate = true;
else gate = false;
outlet_tALKER[13] = gate; 
outlet_tALKER[14] = 0;
outlet_tALKER[15] = 0;]]></code.krate>
   </obj.normal>
</objdefs>